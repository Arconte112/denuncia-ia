# Use Node.js 20 as the base image
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Copy package.json and install dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Copy the rest of the application
COPY . .

# Define build arguments for environment variables
ARG NEXT_PUBLIC_SUPABASE_URL
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY
ARG TWILIO_ACCOUNT_SID
ARG TWILIO_AUTH_TOKEN
ARG TWILIO_PHONE_NUMBER
ARG OPENAI_API_KEY
ARG NEXTAUTH_URL
ARG NEXTAUTH_SECRET
ARG HOST_URL
ARG RESEND_API_KEY
ARG SUPPORT_EMAIL_FROM
ARG SUPPORT_EMAIL_TO

# Set environment variables for build and runtime
ENV NEXT_TELEMETRY_DISABLED 1
ENV NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
ENV TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
ENV TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
ENV TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
ENV HOST_URL=${HOST_URL}
ENV RESEND_API_KEY=${RESEND_API_KEY}
ENV SUPPORT_EMAIL_FROM=${SUPPORT_EMAIL_FROM}
ENV SUPPORT_EMAIL_TO=${SUPPORT_EMAIL_TO}

# Build the application with options to bypass type checking
# Force server-only rendering mode
ENV NEXT_FORCE_SERVER_COMPONENTS=true
RUN NODE_OPTIONS="--max_old_space_size=4096" npx next build --no-lint

# Expose the port the app will run on
EXPOSE 8661
ENV PORT 8661

# Start the application
CMD ["npm", "start", "--", "-p", "8661"] 